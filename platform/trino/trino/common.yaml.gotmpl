nameOverride: trino
coordinatorNameOverride: trino-coordinator
workerNameOverride: trino-worker

image:
  repository: trinodb/trino
  tag: "452"
  pullPolicy: IfNotPresent

accessControl: { }
# accessControl -- [System access
# control](https://trino.io/docs/current/security/built-in-system-access-control.html)
# configuration.
# @raw
# Example:
# ```yaml
#  type: configmap
#  refreshPeriod: 60s
#  # Rules file is mounted to /etc/trino/access-control
#  configFile: "rules.json"
#  rules:
#    rules.json: |-
#      {
#        "catalogs": [
#          {
#            "user": "admin",
#            "catalog": "(mysql|system)",
#            "allow": "all"
#          },
#          {
#            "group": "finance|human_resources",
#            "catalog": "postgres",
#            "allow": true
#          },
#          {
#            "catalog": "hive",
#            "allow": "all"
#          },
#          {
#            "user": "alice",
#            "catalog": "postgresql",
#            "allow": "read-only"
#          },
#          {
#            "catalog": "system",
#            "allow": "none"
#          }
#        ],
#        "schemas": [
#          {
#            "user": "admin",
#            "schema": ".*",
#            "owner": true
#          },
#          {
#            "user": "guest",
#            "owner": false
#          },
#          {
#            "catalog": "default",
#            "schema": "default",
#            "owner": true
#          }
#        ]
#      }
# ```

resourceGroups: { }
# resourceGroups -- Resource groups file is mounted to /etc/trino/resource-groups/resource-groups.json
# @raw
# Example:
# ```yaml
#  resourceGroupsConfig: |-
#      {
#        "rootGroups": [
#          {
#            "name": "global",
#            "softMemoryLimit": "80%",
#            "hardConcurrencyLimit": 100,
#            "maxQueued": 100,
#            "schedulingPolicy": "fair",
#            "jmxExport": true,
#            "subGroups": [
#              {
#                "name": "admin",
#                "softMemoryLimit": "30%",
#                "hardConcurrencyLimit": 20,
#                "maxQueued": 10
#              },
#              {
#                "name": "finance_human_resources",
#                "softMemoryLimit": "20%",
#                "hardConcurrencyLimit": 15,
#                "maxQueued": 10
#              },
#              {
#                "name": "general",
#                "softMemoryLimit": "30%",
#                "hardConcurrencyLimit": 20,
#                "maxQueued": 10
#              },
#              {
#                "name": "readonly",
#                "softMemoryLimit": "10%",
#                "hardConcurrencyLimit": 5,
#                "maxQueued": 5
#              }
#            ]
#          }
#        ],
#        "selectors": [
#          {
#            "user": "admin",
#            "group": "global.admin"
#          },
#          {
#            "group": "finance|human_resources",
#            "group": "global.finance_human_resources"
#          },
#          {
#            "user": "alice",
#            "group": "global.readonly"
#          },
#          {
#            "group": "global.general"
#          }
#        ]
#      }
# ```


additionalNodeProperties: [ ]
# additionalNodeProperties -- [Additional node
# properties](https://trino.io/docs/current/installation/deployment.html#log-levels).
# @raw
# Example, assuming the NODE_ID environment variable has been set:
# ```yaml
#  - node.id=${NODE_ID}
# ```

additionalConfigProperties: [ ]
# additionalConfigProperties -- [Additional config
# properties](https://trino.io/docs/current/admin/properties.html).
# @raw
# Example:
# ```yaml
#  - internal-communication.shared-secret=random-value-999
#  - http-server.process-forwarded=true
# ```

additionalLogProperties: [ ]
# additionalLogProperties -- [Additional log
# properties](https://trino.io/docs/current/installation/deployment.html#log-levels).
# @raw
# Example:
# ```yaml
#  - io.airlift=DEBUG
# ```

additionalExchangeManagerProperties: [ ]

eventListenerProperties: [ ]
# eventListenerProperties -- [Event
# listener](https://trino.io/docs/current/develop/event-listener.html#event-listener)
# properties. To configure multiple event listeners, add them in
# `coordinator.additionalConfigFiles` and `worker.additionalConfigFiles`, and
# set the `event-listener.config-files` property in
# `additionalConfigProperties` to their locations.
# @raw
# Example:
# ```yaml
#  - event-listener.name=custom-event-listener
#  - custom-property1=custom-value1
#  - custom-property2=custom-value2
# ```

additionalCatalogs: { }
# additionalCatalogs -- Configure additional
# [catalogs](https://trino.io/docs/current/installation/deployment.html#catalog-properties).
# The TPCH and TPCDS catalogs are always enabled by default, with 4 splits per
# node.
# @raw
# Example:
# ```yaml
#  objectstore: |
#    connector.name=iceberg
#    iceberg.catalog.type=glue
#  jmx: |
#    connector.name=memory
#  memory: |
#    connector.name=memory
#    memory.max-data-per-node=128MB
# ```

env: [ ]
# env -- additional environment variables added to every pod, specified as a list with explicit values
# @raw
# Example:
# ```yaml
#  - name: NAME
#    value: "value"
# ```

envFrom: [ ]
# envFrom -- additional environment variables added to every pod, specified as a list of either ConfigMap or Secret references
# @raw
# Example:
# ```yaml
#   - secretRef:
#     name: extra-secret
# ```

initContainers: { }
# initContainers -- Additional [containers that run to
# completion](https://kubernetes.io/docs/concepts/workloads/pods/init-containers/)
# during pod initialization.
# @raw
# Example:
# ```yaml
#  coordinator:
#    - name: init-coordinator
#      image: busybox:1.28
#      imagePullPolicy: IfNotPresent
#      command: ['sh', '-c', "until nslookup myservice.$(cat /var/run/secrets/kubernetes.io/serviceaccount/namespace).svc.cluster.local; do echo waiting for myservice; sleep 2; done"]
#  worker:
#    - name: init-worker
#      image: busybox:1.28
#      command: ['sh', '-c', 'echo The worker is running! && sleep 3600']
# ```

sidecarContainers: { }
# sidecarContainers -- Additional [containers that starts
# before](https://kubernetes.io/docs/concepts/workloads/pods/sidecar-containers/)
# the Trino container and continues to run.
# @raw
# Example:
# ```yaml
#  coordinator:
#    - name: side-coordinator
#      image: busybox:1.28
#      imagePullPolicy: IfNotPresent
#      command: ['sleep', '1']
#  worker:
#    - name: side-worker
#      image: busybox:1.28
#      imagePullPolicy: IfNotPresent
#      command: ['sleep', '1']
# ```

securityContext:
  runAsUser: 1000
  runAsGroup: 1000

# -- [Container security context](https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container) configuration.
containerSecurityContext:
  # -- Control whether a process can gain more privileges than its parent process.
  allowPrivilegeEscalation: false
  capabilities:
    # -- A list of the Linux kernel capabilities that are dropped from every container. Valid values are listed at https://man7.org/linux/man-pages/man7/capabilities.7.html Ensure to remove the "CAP_" prefix which the kernel attaches to the names of permissions.
    drop:
      - ALL

shareProcessNamespace:
  coordinator: false
  worker: false

service:
  annotations: { }
  type: ClusterIP
  port: 8080

auth: { }
# auth -- Available authentication methods.
# @raw
# Use username and password provided as a [password file](https://trino.io/docs/current/security/password-file.html#file-format):
# ```yaml
#  passwordAuth: "username:encrypted-password-with-htpasswd"
# ```
# Set the name of a secret containing this file in the password.db key
# ```yaml
#  passwordAuthSecret: "trino-password-authentication"
# ```
# Additionally, set [users' groups](https://trino.io/docs/current/security/group-file.html#file-format):
# ```yaml
#  refreshPeriod: 5s
#  groups: "group_name:user_1,user_2,user_3"
# ```

serviceAccount:
  # -- Specifies whether a service account should be created
  create: false
  # -- The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""
  # -- Annotations to add to the service account
  annotations: { }

configMounts: [ ]
# configMounts -- Allows mounting additional Trino configuration files from
# Kubernetes config maps on all nodes.
# @raw
# Example:
# ```yaml
#  - name: sample-config-mount
#    configMap: sample-config-map
#    path: /config-map/sample.json
# ```

secretMounts: [ ]
# secretMounts -- Allows mounting additional Trino configuration files from
# Kubernetes secrets on all nodes.
# @raw
# Example:
# ```yaml
#  - name: sample-secret
#    secretName: sample-secret
#    path: /secrets/sample.json
# ```

kafka:
  mountPath: "/etc/trino/schemas"
  tableDescriptions: { }
  # kafka.tableDescriptions -- Custom kafka table descriptions that will be mounted in mountPath.
  # @raw
  # Example:
  # ```yaml
  #  testschema.json: |-
  #    {
  #      "tableName": "testtable",
  #      "schemaName": "testschema",
  #      "topicName": "testtopic",
  #      "key": {
  #        "dataFormat": "json",
  #        "fields": [
  #          {
  #            "name": "_key",
  #            "dataFormat": "VARCHAR",
  #            "type": "VARCHAR",
  #            "hidden": "false"
  #          }
  #        ]
  #      },
  #      "message": {
  #        "dataFormat": "json",
  #        "fields": [
  #          {
  #            "name": "id",
  #            "mapping": "id",
  #            "type": "BIGINT"
  #          },
  #          {
  #            "name": "test_field",
  #            "mapping": "test_field",
  #            "type": "VARCHAR"
  #          }
  #        ]
  #      }
  #    }
  # ```

jmx:
  # -- Set to true to enable the RMI server to expose Trino's [JMX metrics](https://trino.io/docs/current/admin/jmx.html).
  enabled: false
  registryPort: 9080
  serverPort: 9081
  exporter:
    # jmx.exporter.enabled -- Set to true to export JMX Metrics via HTTP for [Prometheus](https://github.com/prometheus/jmx_exporter) consumption
    enabled: false
    image: bitnami/jmx-exporter:latest
    pullPolicy: Always
    port: 5556
    configProperties: [ ]
    # jmx.exporter.configProperties -- JMX Config Properties is mounted to /etc/jmx-exporter/jmx-exporter-config.yaml
    # @raw
    # Example:
    # ```yaml
    #  configProperties: |-
    #     startDelaySeconds: 0
    #     ssl: false
    #     lowercaseOutputName: false
    #     lowercaseOutputLabelNames: false
    #     includeObjectNames: ["java.lang:type=Threading"]
    #     autoExcludeObjectNameAttributes: true
    #     excludeObjectNameAttributes:
    #       "java.lang:type=OperatingSystem":
    #         - "ObjectName"
    #       "java.lang:type=Runtime":
    #         - "ClassPath"
    #         - "SystemProperties"
    #     rules:
    #       - pattern: 'java\.lang<type=Threading><(.*)>ThreadCount: (.*)'
    #         name: java_lang_Threading_ThreadCount
    #         value: '$2'
    #         help: 'ThreadCount (java.lang<type=Threading><>ThreadCount)'
    #         type: UNTYPED

serviceMonitor:
  # serviceMonitor.enabled -- Set to true to create resources for the [prometheus-operator](https://github.com/prometheus-operator/prometheus-operator).
  enabled: false
  # serviceMonitor.labels -- Labels for serviceMonitor, so that Prometheus can select it
  labels:
    prometheus: kube-prometheus
  # serviceMonitor.interval -- The serviceMonitor web endpoint interval
  interval: "30s"

# -- Labels that get applied to every resource's metadata
commonLabels: { }

ingress:
  enabled: false
  className: ""
  annotations: { }
  hosts: [ ]
  # ingress.hosts -- [Ingress
  # rules](https://kubernetes.io/docs/concepts/services-networking/ingress/#ingress-rules).
  # @raw
  # Example:
  # ```yaml
  #  - host: trino.example.com
  #    paths:
  #      - path: /
  #        pathType: ImplementationSpecific
  # ```
  tls: [ ]
  # ingress.tls -- Ingress
  # [TLS](https://kubernetes.io/docs/concepts/services-networking/ingress/#tls)
  # configuration.
  # @raw
  # Example:
  # ```yaml
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local
  # ```
